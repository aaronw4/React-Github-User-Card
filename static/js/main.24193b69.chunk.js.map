{"version":3,"sources":["Components/Calendar.js","Components/UserCard.js","Components/FriendList.js","Components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Calendar","props","chart","data","login","className","src","alt","UserCard","link","name","location","avatar_url","bio","followers","following","public_repos","href","FriendList","handleClick","e","console","log","target","value","changeUser","this","map","item","key","onClick","React","Component","Search","handleChanges","setState","searchText","state","search","handleSubmit","preventDefault","user","prevProps","prevState","fetch","then","res","json","items","catch","err","onChange","type","placeholder","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24193b69.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Calendar = props => {\r\n    var chart = `http://ghchart.rshah.org/${props.data.login}`;\r\n    return(\r\n        <div className='calendar'>\r\n            <img src={chart} alt={props.login}/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Calendar} from './Calendar'\r\n\r\nexport const UserCard = props => {\r\n\r\n    var link = `https://github.com/${props.data.login}?tab=repositories`\r\n\r\n    return(\r\n        <div>\r\n            <div className='profile'>\r\n                <h2>{props.data.name}</h2>\r\n                <h4>{props.data.location}</h4>\r\n                <img src={props.data.avatar_url} alt={props.data.name}/>\r\n                <p>{props.data.bio}</p>\r\n                <p><span>Followers: {props.data.followers}</span> <span>Following: {props.data.following}</span></p>\r\n                <p>Number of public repositories: {props.data.public_repos}</p>\r\n                <a href={link}>Link to repositories</a>\r\n            </div>\r\n            <Calendar data={props.data}/>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\n\r\nexport class FriendList extends React.Component{  \r\n    \r\n    handleClick = (e) => {\r\n        console.log(e.target.value)\r\n        this.props.changeUser(e.target.value);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='followersList'>\r\n                <h2>Followers</h2>\r\n                {this.props.followers.map(item => {\r\n                    console.log(item.login)\r\n                    return(\r\n                    <div key={item.login} className='followers'>\r\n                        <img src={item.avatar_url} alt={item.name} className='followerImg'/>\r\n                        <p className='followerLogin'>{item.login}</p>\r\n                        <button className='viewProfile' onClick={this.handleClick} value={item.login}>View Profile</button>\r\n                    </div>\r\n                )})}        \r\n            </div>\r\n    )}\r\n}","import React from 'react';\r\n\r\nexport class Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {       \r\n            search: [],\r\n            searchText: '',\r\n            user:''\r\n            }\r\n    }\r\n\r\n    handleChanges = e => {\r\n        this.setState({\r\n            searchText: e.target.value\r\n        })\r\n        if (this.state.searchText === '') {\r\n            this.setState({\r\n                search: []\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            user: this.state.searchText\r\n        })  \r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.props.changeUser(e.target.value);\r\n        this.setState({\r\n            searchText:'',\r\n            search: []\r\n        })\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState){\r\n        if (this.state.user !== prevState.user) {\r\n        fetch(`https://api.github.com/search/users?q=${this.state.user}`)\r\n        .then(res => res.json())\r\n        .then(res =>  {\r\n          console.log(res.items)\r\n          this.setState({search: res.items})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }}\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form >\r\n                    <input\r\n                        onChange={this.handleChanges}\r\n                        type='text'\r\n                        name='search'\r\n                        value={this.state.searchText}\r\n                        className='search'\r\n                        placeholder='Search Users'\r\n                    />\r\n                    <button onClick={this.handleSubmit}>Submit</button>\r\n                </form>                \r\n                {this.state.searchText !== '' ?\r\n                    this.state.search.map(user => {\r\n                        return(\r\n                            <div key={user.login}>\r\n                                <button className='user' onClick={this.handleClick} value={user.login}>\r\n                                    {user.login}\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }) : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {UserCard} from './Components/UserCard';\r\nimport {FriendList} from './Components/FriendList';\r\nimport {Search} from './Components/Search';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    followers: [],\r\n    user: 'aaronw4'\r\n  }\r\n\r\ncomponentDidMount() {\r\n  fetch(`https://api.github.com/users/${this.state.user}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({data: res})\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\ncomponentWillMount() {\r\n  fetch(`https://api.github.com/users/${this.state.user}/followers`)\r\n    .then(res => res.json())\r\n    .then(res =>  {\r\n      console.log(res);\r\n      this.setState({followers: res})\r\n    })\r\n    .catch(err => console.log(err)); \r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  if (this.state.user !== prevState.user) {\r\n  fetch(`https://api.github.com/users/${this.state.user}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({data: res})\r\n    })\r\n    .catch(err => console.log(err));\r\n\r\n    fetch(`https://api.github.com/users/${this.state.user}/followers`)\r\n    .then(res => res.json())\r\n    .then(res =>  {\r\n      console.log(res);\r\n      this.setState({followers: res})\r\n    })\r\n    .catch(err => console.log(err));\r\n}}\r\n\r\nchangeUser = login => {\r\n  this.setState({\r\n    user: login\r\n  })\r\n}\r\n\r\n  render() {\r\n    return (     \r\n      <div className=\"App\">\r\n        <UserCard data={this.state.data}/>\r\n        <FriendList followers={this.state.followers} changeUser={this.changeUser}/>\r\n        <Search changeUser={this.changeUser}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}